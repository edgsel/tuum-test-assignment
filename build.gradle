plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.12.RELEASE'
	id 'org.flywaydb.flyway' version '8.4.2'
	id 'java'
}

group = 'com.edgsel'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'net.sf.oval:oval:3.2.1'
	implementation 'org.apache.commons:commons-collections4:4.4'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.2.2'
}

flyway {
	String dbHost = System.getenv("DB_HOST")
	String dbPort = System.getenv("DB_PORT")
	String dbName = System.getenv("POSTGRES_DB")

	url = "jdbc:postgresql://$dbHost:$dbPort/$dbName"
	user = System.getenv("POSTGRES_USERNAME")
	password = System.getenv("POSTGRES_PASSWORD")
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	archiveFileName='tuum-test-assignment-1.0.0.jar'
}
